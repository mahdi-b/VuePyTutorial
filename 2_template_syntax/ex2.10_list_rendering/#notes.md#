
* Using v-if and v-for together is not recommended. See the style guide for further information.

* v-for directive renders a list of items based on an input array.
  * The v-for directive requires a special syntax in the form of `item in items`,
    * `items` is the source data array and `item` is an alias for the array element being iterated on


* v-for also supports an optional second argument for the index of the current item.
<ul id="example-2">
  <li v-for="(item, index) in items">
    {{ index }} - {{ item.message }}
  </li>
</ul>

* V-for can also work on to iterate over the properties of a dictionary


* For Vue to track each nodeâ€™s identity and reuse and reorder existing elements, you need to provide a unique key attribute for each item

```

<div v-for="item in items" v-bind:key="item.id">
  <!-- content -->
</div>
```

* v-for can also take an integer. In this case it will repeat the template that many times.

* Similar to template `v-if`, you can also use a <template> tag with v-for to render a block of multiple elements
  * Same can be achived with a div, but `template` does not get rendered.